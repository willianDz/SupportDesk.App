<?xml version="1.0" encoding="UTF-8" ?>
<?xaml-comp compile="true" ?>
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml">

    <!-- Regular Label Styles -->
    <Style TargetType="Label" x:Key="BaseRegularLightLabelTextStyle">
        <Setter Property="LineBreakMode" Value="TailTruncation" />
        <Setter Property="FontAutoScalingEnabled" Value="False" />
        <Setter Property="FontFamily" Value="RegularFont" />
        <Setter Property="TextColor" Value="{StaticResource LightTextColor}" />
    </Style>

    <Style TargetType="Label" x:Key="RegularLightText16" BasedOn="{StaticResource BaseRegularLightLabelTextStyle}">
        <Setter Property="FontSize" Value="16" />
    </Style>

    <Style TargetType="Label" x:Key="RegularLightText14" BasedOn="{StaticResource BaseRegularLightLabelTextStyle}">
        <Setter Property="FontSize" Value="14" />
    </Style>

    <Style TargetType="Label" x:Key="RegularLightText12" BasedOn="{StaticResource BaseRegularLightLabelTextStyle}">
        <Setter Property="FontSize" Value="12" />
    </Style>

    <OnPlatform x:Key="DefaultButtonClassBackgroundColor" x:TypeArguments="Color">
        <On Platform="iOS" Value="{StaticResource iOSDefaultButtonClassBackgroundColor}" />
        <On Platform="Android" Value="{StaticResource AndroidDefaultButtonClassBackgroundColor}" />
    </OnPlatform>

    <OnPlatform x:Key="DefaultButtonClassBorderColor" x:TypeArguments="Color">
        <On Platform="iOS" Value="{StaticResource iOSDefaultButtonClassBorderColor}" />
        <On Platform="Android" Value="{StaticResource AndroidDefaultButtonClassBorderColor}" />
    </OnPlatform>

    <OnPlatform x:Key="DefaultButtonClassTextColor" x:TypeArguments="Color">
        <On Platform="iOS" Value="{StaticResource iOSDefaultButtonClassTextColor}" />
        <On Platform="Android" Value="{StaticResource AndroidDefaultButtonClassTextColor}" />
    </OnPlatform>

    <OnPlatform x:Key="EntryBackgroundColor" x:TypeArguments="Color">
        <On Platform="iOS" Value="{StaticResource iOSEntryBackgroundColor}" />
        <On Platform="Android" Value="{StaticResource AndroidEntryBackgroundColor}" />
    </OnPlatform>

    <OnPlatform x:Key="ThemeListViewBackgroundColor" x:TypeArguments="Color">
        <On Platform="iOS" Value="{StaticResource iOSListViewBackgroundColor}" />
        <On Platform="Android" Value="{StaticResource AndroidListViewBackgroundColor}" />
    </OnPlatform>

    <Style TargetType="Label" x:Key="BaseMediumLightLabelTextStyle">
        <Setter Property="LineBreakMode" Value="TailTruncation" />
        <Setter Property="FontAutoScalingEnabled" Value="False" />
        <Setter Property="FontFamily" Value="MediumFont" />
        <Setter Property="TextColor" Value="{StaticResource LightTextColor}" />
    </Style>

    <Style TargetType="Label" x:Key="MediumLightText18" BasedOn="{StaticResource BaseMediumLightLabelTextStyle}">
        <Setter Property="FontSize" Value="18" />
    </Style>

    <Style TargetType="Label" x:Key="MediumLightText14" BasedOn="{StaticResource BaseMediumLightLabelTextStyle}">
        <Setter Property="FontSize" Value="14" />
    </Style>

    <!--  SIZES  -->
    <OnPlatform x:Key="BaseButtonBorderRadius" x:TypeArguments="x:Double">
        <On Platform="iOS" Value="6" />
    </OnPlatform>

    <OnPlatform x:Key="BaseButtonBorderWidth" x:TypeArguments="x:Double">
        <On Platform="iOS, Android" Value="0" />
    </OnPlatform>

    <!--  FONTS  -->
    <x:String x:Key="MontserratRegular">Montserrat-Regular</x:String>
    <x:String x:Key="MontserratBold">Montserrat-Bold</x:String>
    <x:String x:Key="SourceSansProRegular">SourceSansPro-Regular</x:String>

    <OnPlatform x:Key="FontAwesomeRegular" x:TypeArguments="x:String">
        <On Platform="iOS, Android" Value="FontAwesome-Regular" />
        <On Platform="WinUI" Value="Assets/Fonts/Font_Awesome_5_Free-Regular-400.otf#Font Awesome 5 Free" />
    </OnPlatform>

    <OnPlatform x:Key="FontAwesomeSolid" x:TypeArguments="x:String">
        <On Platform="iOS, Android" Value="FontAwesome-Solid" />
        <On Platform="WinUI" Value="Assets/Fonts/Font_Awesome_5_Free-Solid-900.otf#Font Awesome 5 Free" />
    </OnPlatform>

    <OnPlatform x:Key="BaseButtonFontSize" x:TypeArguments="x:Double">
        <On Platform="iOS" Value="18" />
        <On Platform="Android" Value="16" />
    </OnPlatform>

    <OnPlatform x:Key="BaseFontSize" x:TypeArguments="x:Double">
        <On Platform="iOS" Value="16" />
        <On Platform="Android" Value="15" />
    </OnPlatform>

    <OnPlatform x:Key="LittleSize" x:TypeArguments="x:Double">
        <On Platform="iOS" Value="11" />
        <On Platform="Android, WinUI" Value="12" />
    </OnPlatform>

    <OnPlatform x:Key="MidMediumSize" x:TypeArguments="x:Double">
        <On Platform="iOS" Value="12" />
        <On Platform="Android, WinUI" Value="14" />
    </OnPlatform>

    <OnPlatform x:Key="MediumSize" x:TypeArguments="x:Double">
        <On Platform="iOS" Value="14" />
        <On Platform="Android, WinUI" Value="16" />
    </OnPlatform>

    <OnPlatform x:Key="LargeSize" x:TypeArguments="x:Double">
        <On Platform="iOS" Value="16" />
        <On Platform="Android, WinUI" Value="18" />
    </OnPlatform>

    <OnPlatform x:Key="LargerSize" x:TypeArguments="x:Double">
        <On Platform="iOS" Value="18" />
        <On Platform="Android, WinUI" Value="20" />
    </OnPlatform>

    <OnPlatform x:Key="BigSize" x:TypeArguments="x:Double">
        <On Platform="iOS" Value="20" />
        <On Platform="Android, WinUI" Value="24" />
    </OnPlatform>

    <OnPlatform x:Key="ExtraBigSize" x:TypeArguments="x:Double">
        <On Platform="iOS" Value="24" />
        <On Platform="Android, WinUI" Value="32" />
    </OnPlatform>

    <OnPlatform x:Key="HugeSize" x:TypeArguments="x:Double">
        <On Platform="iOS" Value="32" />
        <On Platform="Android, WinUI" Value="48" />
    </OnPlatform>

    <OnPlatform x:Key="BaseButtonFontAttributes" x:TypeArguments="FontAttributes">
        <On Platform="iOS" Value="Bold" />
        <On Platform="Android" Value="None" />
    </OnPlatform>

    <!--  EXPLICIT STYLES  -->
    <Style x:Key="ValidationErrorLabelStyle" TargetType="{x:Type Label}">
        <Setter Property="TextColor" Value="{StaticResource ErrorColor}" />
        <Setter Property="FontSize" Value="{StaticResource LittleSize}" />
    </Style>

    <Style x:Key="EntryStyle" TargetType="{x:Type Entry}">
        <Setter Property="FontFamily" Value="{StaticResource MontserratRegular}" />
        <Setter Property="FontSize" Value="{StaticResource LargeSize}" />
        <Setter Property="HorizontalOptions" Value="FillAndExpand" />
        <Setter Property="FontAttributes" Value="Bold" />
        <Setter Property="Opacity" Value="0.6" />
        <Style.Triggers>
            <Trigger TargetType="Entry" Property="IsFocused" Value="True">
                <Setter Property="Opacity" Value="1" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MediumSizeFontStyle" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="{StaticResource MontserratRegular}" />
        <Setter Property="FontSize" Value="{StaticResource MediumSize}" />
    </Style>

    <Style x:Key="LittleSizeFontStyle" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="{StaticResource MontserratRegular}" />
        <Setter Property="FontSize" Value="{StaticResource LittleSize}" />
    </Style>

    <Style x:Key="WinUIEntryStyle" TargetType="{x:Type Entry}">
        <Setter Property="FontFamily" Value="{StaticResource MontserratRegular}" />
        <Setter Property="TextColor" Value="{StaticResource Black}" />
        <Setter Property="PlaceholderColor" Value="{StaticResource Black}" />
        <Setter Property="FontSize" Value="{StaticResource LargeSize}" />
        <Setter Property="HorizontalOptions" Value="FillAndExpand" />
        <Setter Property="FontAttributes" Value="Bold" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="Opacity" Value="0.6" />
        <Style.Triggers>
            <Trigger TargetType="Entry" Property="IsFocused" Value="True">
                <Setter Property="Opacity" Value="1" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Style Classes-->
    <Style Class="Card" TargetType="Frame">
        <Setter Property="HasShadow" Value="False" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Gray950}}" />
        <Setter Property="BorderColor" Value="{AppThemeBinding Light={StaticResource LightBorderColor}, Dark={StaticResource Gray600}}" />
        <Setter Property="Padding" Value="15" />
        <Setter Property="Margin" Value="0,5" />
        <Setter Property="CornerRadius" Value="20" />
        <Setter Property="IsClippedToBounds" Value="True" />
    </Style>

    <Style Class="Border-Primary-w3" TargetType="BoxView">
        <Setter Property="Color" Value="{StaticResource color-primary}"  />
        <Setter Property="VerticalOptions" Value="FillAndExpand" />
        <Setter Property="WidthRequest" Value="3" />
    </Style>

    <Style Class="Badge" TargetType="Border">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource color-primary}, Dark={StaticResource White}}" />
        <Setter Property="StrokeShape" Value="RoundRectangle 10" />
        <Setter Property="Padding" Value="7,3" />
    </Style>

    <Style Class="Badge-Text-Sm" TargetType="Label">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Gray900}}" />
        <Setter Property="FontSize" Value="12" />
    </Style>

    <Style Class="Text-Muted" TargetType="Label">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray500}, Dark={StaticResource WhiteSmokeColor}}" />
    </Style>

    <Style Class="Font-Bold" TargetType="Label">
        <Setter Property="FontAttributes" Value="Bold"/>
    </Style>

    <Style Class="Font-LatoBold" TargetType="Label">
        <Setter Property="FontFamily" Value="LatoBold"/>
    </Style>

    <Style Class="Text-Title" TargetType="Label">
        <Setter Property="FontAttributes" Value="Bold"/>
        <Setter Property="FontFamily" Value="LatoBold"/>
        <Setter Property="FontSize" Value="Medium"/>
    </Style>

    <Style Class="Subtitle-Primary" TargetType="Label">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource color-primary}, Dark={StaticResource White}}"/>
        <Setter Property="FontAttributes" Value="Bold"/>
        <Setter Property="FontFamily" Value="LatoBold"/>
    </Style>

    <Style TargetType="ActivityIndicator">
        <Setter Property="Color" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource White}}" />
    </Style>

    <Style TargetType="IndicatorView">
        <Setter Property="IndicatorColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray500}}"/>
        <Setter Property="SelectedIndicatorColor" Value="{AppThemeBinding Light={StaticResource Gray950}, Dark={StaticResource Gray100}}"/>
    </Style>

    <Style TargetType="Border">
        <Setter Property="Stroke" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray500}}" />
        <Setter Property="StrokeShape" Value="Rectangle"/>
        <Setter Property="StrokeThickness" Value="1"/>
    </Style>

    <Style TargetType="BoxView">
        <Setter Property="Color" Value="{AppThemeBinding Light={StaticResource Gray950}, Dark={StaticResource Gray200}}" />
    </Style>

    <Style
        ApplyToDerivedTypes="True"
        CanCascade="True"
        TargetType="Button">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource White}}" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource color-primary}, Dark={StaticResource color-primary}}" />
        <Setter Property="FontFamily" Value="OpenSansRegular"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="Padding" Value="14,10"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray950}, Dark={StaticResource Gray200}}" />
                            <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="CheckBox">
        <Setter Property="Color" Value="{AppThemeBinding Light={StaticResource color-primary}, Dark={StaticResource White}}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Color" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="DatePicker">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource White}}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="FontFamily" Value="OpenSansRegular"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray500}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="Editor">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="FontFamily" Value="OpenSansRegular"/>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="PlaceholderColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray500}}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style
        ApplyToDerivedTypes="True"
        CanCascade="True"
        TargetType="Entry">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource Black}}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="FontFamily" Value="OpenSansRegular"/>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="PlaceholderColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray500}}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="Frame">
        <Setter Property="HasShadow" Value="False" />
        <Setter Property="BorderColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray950}}" />
        <Setter Property="CornerRadius" Value="8" />
    </Style>

    <Style TargetType="ImageButton">
        <Setter Property="Opacity" Value="1" />
        <Setter Property="BorderColor" Value="Transparent"/>
        <Setter Property="BorderWidth" Value="0"/>
        <Setter Property="CornerRadius" Value="0"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.5" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style
        ApplyToDerivedTypes="True"
        CanCascade="True"
        TargetType="Label">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource WhiteSmokeColor}}" />
        <Setter Property="FontFamily" Value="OpenSansRegular" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="ListView">
        <Setter Property="SeparatorColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray500}}" />
        <Setter Property="RefreshControlColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource Gray200}}" />
    </Style>

    <Style
        ApplyToDerivedTypes="True"
        CanCascade="True"
        TargetType="ImageCell">
        <Setter Property="TextColor" Value="{StaticResource InverseTextColor}" />
        <Setter Property="DetailColor" Value="{StaticResource AccentColor}" />
    </Style>

    <Style TargetType="Picker">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource White}}" />
        <Setter Property="TitleColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource Gray200}}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="FontFamily" Value="OpenSansRegular"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                            <Setter Property="TitleColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="ProgressBar">
        <Setter Property="ProgressColor" Value="{AppThemeBinding Light={StaticResource color-primary}, Dark={StaticResource White}}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="ProgressColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="RadioButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />
        <Setter Property="FontFamily" Value="OpenSansRegular"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="RefreshView">
        <Setter Property="RefreshColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource Gray200}}" />
    </Style>

    <Style TargetType="SearchBar">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource White}}" />
        <Setter Property="PlaceholderColor" Value="{StaticResource Gray500}" />
        <Setter Property="CancelButtonColor" Value="{StaticResource Gray500}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="FontFamily" Value="OpenSansRegular" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                            <Setter Property="PlaceholderColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="SearchHandler">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource White}}" />
        <Setter Property="PlaceholderColor" Value="{StaticResource Gray500}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="FontFamily" Value="OpenSansRegular" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                            <Setter Property="PlaceholderColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="Shadow">
        <Setter Property="Radius" Value="15" />
        <Setter Property="Opacity" Value="0.5" />
        <Setter Property="Brush" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource White}}" />
        <Setter Property="Offset" Value="10,10" />
    </Style>

    <Style TargetType="Slider">
        <Setter Property="MinimumTrackColor" Value="{AppThemeBinding Light={StaticResource color-primary}, Dark={StaticResource White}}" />
        <Setter Property="MaximumTrackColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray600}}" />
        <Setter Property="ThumbColor" Value="{AppThemeBinding Light={StaticResource color-primary}, Dark={StaticResource White}}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="MinimumTrackColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}"/>
                            <Setter Property="MaximumTrackColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}"/>
                            <Setter Property="ThumbColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}"/>
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="SwipeItem">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Black}}" />
    </Style>

    <Style TargetType="Switch">
        <Setter Property="OnColor" Value="{AppThemeBinding Light={StaticResource color-primary}, Dark={StaticResource White}}" />
        <Setter Property="ThumbColor" Value="{StaticResource White}" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="OnColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                            <Setter Property="ThumbColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="On">
                        <VisualState.Setters>
                            <Setter Property="OnColor" Value="{AppThemeBinding Light={StaticResource color-secondary}, Dark={StaticResource Gray200}}" />
                            <Setter Property="ThumbColor" Value="{AppThemeBinding Light={StaticResource color-primary}, Dark={StaticResource White}}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Off">
                        <VisualState.Setters>
                            <Setter Property="ThumbColor" Value="{AppThemeBinding Light={StaticResource Gray400}, Dark={StaticResource Gray500}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="TimePicker">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource White}}" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontFamily" Value="OpenSansRegular"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style
        ApplyToDerivedTypes="True"
        CanCascade="True"
        TargetType="TextCell">
        <Setter Property="TextColor" Value="{StaticResource InverseTextColor}" />
        <Setter Property="DetailColor" Value="{StaticResource AccentColor}" />
    </Style>

    <Style
        ApplyToDerivedTypes="True"
        CanCascade="True"
        TargetType="CollectionView">
        <Setter Property="BackgroundColor" Value="{StaticResource ThemeListViewBackgroundColor}" />
    </Style>

    <Style TargetType="Page" ApplyToDerivedTypes="True">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource WhiteSmokeColor}, Dark={StaticResource DarkBackgroundColor}}" />
    </Style>

    <Style TargetType="Shell" ApplyToDerivedTypes="True">
        <Setter Property="Shell.BackgroundColor" Value="{AppThemeBinding  Light={StaticResource color-secondary}, Dark={StaticResource Gray900}}" />
        <Setter Property="Shell.ForegroundColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource DarkForegroundColor}}" />
        <Setter Property="Shell.TitleColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource White}}" />
        <Setter Property="Shell.DisabledColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray950}}" />
        <Setter Property="Shell.UnselectedColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray200}}" />
        <Setter Property="Shell.NavBarHasShadow" Value="True" />
        <Setter Property="Shell.TabBarBackgroundColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Gray950}}" />
        <Setter Property="Shell.TabBarForegroundColor" Value="{AppThemeBinding Light={StaticResource color-primary}, Dark={StaticResource White}}" />
        <Setter Property="Shell.TabBarTitleColor" Value="{AppThemeBinding Light={StaticResource color-primary}, Dark={StaticResource White}}" />
        <Setter Property="Shell.TabBarUnselectedColor" Value="{AppThemeBinding Light={StaticResource Gray400}, Dark={StaticResource Gray200}}" />
        <Setter Property="Shell.FlyoutBackgroundColor" Value="{AppThemeBinding Light={StaticResource White},  Dark={StaticResource Gray900}}" />
    </Style>

    <Style TargetType="NavigationPage">
        <Setter Property="BarBackgroundColor" Value="{AppThemeBinding Light={StaticResource color-primary}, Dark={StaticResource Gray950}}" />
        <Setter Property="BarTextColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource White}}" />
        <Setter Property="IconColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource White}}" />
    </Style>

    <Style TargetType="TabbedPage">
        <Setter Property="BarBackgroundColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Gray950}}" />
        <Setter Property="BarTextColor" Value="{AppThemeBinding Light={StaticResource color-primary}, Dark={StaticResource White}}" />
        <Setter Property="UnselectedTabColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray950}}" />
        <Setter Property="SelectedTabColor" Value="{AppThemeBinding Light={StaticResource Gray950}, Dark={StaticResource Gray200}}" />
    </Style>

</ResourceDictionary>